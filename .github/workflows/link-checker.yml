name: Link Checker & Cross-Repository Sync

on:
  workflow_dispatch: # Manual trigger only for now
  # Disabled automatic triggers until scripts are implemented
  # schedule:
  #   - cron: '0 2 * * *'
  # push:
  #   paths:
  #     - '**/*.md'

jobs:
  validate-agentically-links:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate Agentically.sh links
      run: |
        echo "🔍 Checking Agentically.sh links..."
        
        # Extract all agentically.sh links from markdown files
        if grep -r "https://www.agentically.sh" . --include="*.md" > agentically_links.txt; then
          echo "✅ Found Agentically.sh links in the repository"
          echo "📊 Link summary:"
          wc -l agentically_links.txt
        else
          echo "ℹ️ No Agentically.sh links found"
          touch agentically_links.txt
        fi
        
        # Basic validation - check if links follow expected patterns
        python3 - << 'EOF'
        import re
        import sys
        import os
        
        if not os.path.exists('agentically_links.txt'):
          print("✅ No links file to check")
          sys.exit(0)
          
        expected_patterns = [
          r'https://www\.agentically\.sh/ai-agentic-frameworks/',
          r'https://www\.agentically\.sh/subscribe/',
          r'https://www\.agentically\.sh/$',
          r'https://www\.agentically\.sh$'
        ]
        
        issues = []
        total_links = 0
        
        try:
          with open('agentically_links.txt', 'r') as f:
            for line in f:
              if ':' in line and 'https://www.agentically.sh' in line:
                total_links += 1
                file_path = line.split(':', 1)[0] if ':' in line else 'unknown'
                urls = re.findall(r'https://www\.agentically\.sh[^\s\)\]]*', line)
                
                for url in urls:
                  # Remove trailing punctuation
                  url = re.sub(r'[.,;:!?\)]+$', '', url)
                  is_valid = any(re.match(pattern, url) for pattern in expected_patterns)
                  if not is_valid:
                    issues.append(f"{file_path}: {url}")
        except Exception as e:
          print(f"Error reading file: {e}")
          sys.exit(0)
        
        print(f"📊 Total Agentically.sh links found: {total_links}")
        
        if issues:
          print("⚠️ Links that don't match expected patterns:")
          for issue in issues[:10]:  # Show first 10 issues
            print(f"  - {issue}")
          if len(issues) > 10:
            print(f"  ... and {len(issues) - 10} more")
          print("\n💡 Expected patterns:")
          print("  - https://www.agentically.sh/ai-agentic-frameworks/...")
          print("  - https://www.agentically.sh/subscribe/")
          print("  - https://www.agentically.sh/")
        else:
          print("✅ All Agentically.sh links follow expected patterns")
        EOF

    - name: Create link inventory
      run: |
        echo "📝 Creating link inventory..."
        python3 - << 'EOF'
        import json
        import re
        import os
        
        if not os.path.exists('agentically_links.txt'):
          print("No links to inventory")
          exit(0)
        
        local_links = set()
        
        try:
          with open('agentically_links.txt', 'r') as f:
            for line in f:
              if 'https://www.agentically.sh' in line:
                urls = re.findall(r'https://www\.agentically\.sh[^\s\)\]]*', line)
                for url in urls:
                  # Clean up URL
                  url = re.sub(r'[.,;:!?\)]+$', '', url)
                  local_links.add(url)
        except Exception as e:
          print(f"Error: {e}")
          exit(0)
        
        # Save inventory
        with open('agentically_links_inventory.json', 'w') as f:
          json.dump({
            'total_unique_links': len(local_links),
            'links': sorted(list(local_links))
          }, f, indent=2)
        
        print(f"✅ Created inventory with {len(local_links)} unique links")
        EOF

    - name: Upload link inventory
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: link-inventory
        path: agentically_links_inventory.json
        if-no-files-found: ignore

    - name: Repository health check
      run: |
        echo "🏥 Repository Health Check"
        echo "========================"
        echo "📁 Markdown files: $(find . -name '*.md' -type f | wc -l)"
        echo "📄 README files: $(find . -name 'README.md' -type f | wc -l)"
        echo "📂 Framework directories: $(find ./frameworks -maxdepth 1 -type d 2>/dev/null | wc -l || echo 0)"
        echo "🔗 Total Agentically links: $(grep -r 'agentically.sh' . --include='*.md' | wc -l || echo 0)"
        echo "✅ Health check complete"